---
import { getCollection } from 'astro:content';
import { config_site } from '../../utils/config-adapter';
import { processFrontmatter } from '../../integrations/process-frontmatter';
import dayjs from 'dayjs';
import CategoryDetailLayout from '../../layouts/CategoryDetailLayout.astro';

export async function getStaticPaths() {
  // 获取所有文章并处理frontmatter
  const allPosts = await getCollection('posts');
  const processedPosts = await Promise.all(allPosts.map(post => processFrontmatter(post)));
  
  // 提取所有分类路径 - 扁平化结构
  const categoryPaths = new Set<string>();
    processedPosts.forEach(post => {
    if (post.data.categories && Array.isArray(post.data.categories)) {
      post.data.categories.forEach((category: string) => {
        if (typeof category === 'string' && category.trim()) {
          categoryPaths.add(category.trim());
        }
      });
    }
  });
  
  // 生成静态路径
  return Array.from(categoryPaths).map(categoryName => {
    return {
      params: { 
        path: categoryName
      },
      props: {
        categoryPath: categoryName
      }
    };
  });
}

const { categoryPath } = Astro.props;

// 获取所有文章并处理frontmatter
const allPosts = await getCollection('posts');
const processedPosts = await Promise.all(allPosts.map(post => processFrontmatter(post)));

// 过滤属于当前分类的文章 - 扁平化结构
function isPostInCategory(post: { data: { categories: any; }; }, targetCategory: string) {
  if (!post.data.categories || !Array.isArray(post.data.categories)) return false;
  
  return post.data.categories.some(category => 
    typeof category === 'string' && category.trim() === targetCategory
  );
}

// 过滤和排序文章
const categoryPosts = processedPosts.filter(post => isPostInCategory(post, categoryPath));

// 排序文章
const sortedPosts = categoryPosts.sort((a, b) => {
  const dateA = a.data.date ? new Date(a.data.date).getTime() : 0;
  const dateB = b.data.date ? new Date(b.data.date).getTime() : 0;
  return dateB - dateA;  // 降序排序
});

// 页面标题
const pageTitle = `分类: ${categoryPath} | ${config_site.siteName}`;
---

<CategoryDetailLayout
  title={pageTitle}
  description={`"${categoryPath}" 分类下的所有文章`}
  author={config_site.author || ''}
  url={config_site.url + '/categories/' + categoryPath}
  categoryName={categoryPath}
  postCount={sortedPosts.length}
  noIndex={true}
>
  {sortedPosts.length > 0 ? (
    <ul class="post-list">
      {sortedPosts.map(post => (
        <li class="post-item">
          <a href={`/posts/${post.data.abbrlink}/`} class="post-link">
            <div class="post-date">
              {dayjs(post.data.date).format('YYYY-MM-DD')}
            </div>
            <h2 class="post-title">{post.data.title}</h2>
            {post.data.description && (
              <p class="post-description">{post.data.description}</p>
            )}
          </a>
          
          {/* 显示文章的所有分类标签 */}
          {post.data.categories && post.data.categories.length > 0 && (
            <div class="post-categories">
              {post.data.categories.map((cat: string) => (
                <a href={`/categories/${cat}/`} class={`category-tag ${cat === categoryPath ? 'current' : ''}`}>
                  {cat}
                </a>
              ))}
            </div>
          )}
        </li>
      ))}
    </ul>
  ) : (
    <div class="no-posts">未找到与分类 "{categoryPath}" 相关的文章</div>
  )}
</CategoryDetailLayout>
